pipeline {
    agent any

    tools {
        maven 'Maven3'
        jdk 'jdk17'
    }

    environment {
        SONAR_TOKEN = credentials('sonar-token3')
        DOCKER_HUB_USERNAME = 'skan77der' // üîÅ remplace par ton username Docker Hub
    }

    stages {
        stage('Build Maven') {
            steps {
                dir('achat-twin9-groupe-5-main/achat-twin9-groupe-5-main/backend') {
                    sh 'mvn clean install'
                }
            }
        }

        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('SonarQube-Local') {
                    withCredentials([string(credentialsId: 'sonar-token3', variable: 'SONAR_TOKEN')]) {
                        dir('achat-twin9-groupe-5-main/achat-twin9-groupe-5-main/backend') {
                            sh 'mvn sonar:sonar -Dsonar.token=$SONAR_TOKEN'
                        }
                    }
                }
            }
        }

        stage('Docker Build & Push') {
            steps {
                dir('achat-twin9-groupe-5-main/achat-twin9-groupe-5-main/backend') {
                    sh '''
                        docker build -t $DOCKER_HUB_USERNAME/achat-backend:latest .
                        docker push $DOCKER_HUB_USERNAME/achat-backend:latest
                    '''
                }
            }
        }
    }

    post {
        always {
            echo '‚úÖ Pipeline termin√©e.'
        }
    }
}
