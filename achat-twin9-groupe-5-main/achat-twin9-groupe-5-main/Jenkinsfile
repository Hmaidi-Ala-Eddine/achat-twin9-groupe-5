pipeline {
    agent any

    environment {
        SONARQUBE = 'SonarQube-Local'
        DOCKER_IMAGE = "skan77der/achat-backend:latest"
    }

    tools {
        maven 'Maven-3.8.5'
        jdk 'jdk17'
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'SkanderLARIBI-4TWIN9-groupe-5-2', url: 'https://github.com/Hmaidi-Ala-Eddine/achat-twin9-groupe-5.git'
            }
        }

        stage('Build Maven') {
            steps {
                dir('achat-twin9-groupe-5-main/achat-twin9-groupe-5-main/backend') {
                    sh 'mvn clean install'
                }
            }
        }

        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv("${SONARQUBE}") {
                    withCredentials([string(credentialsId: 'sonar-token3', variable: 'SONAR_TOKEN')]) {
                        dir('achat-twin9-groupe-5-main/achat-twin9-groupe-5-main/backend') {
                            sh 'mvn sonar:sonar -Dsonar.token=$SONAR_TOKEN'
                        }
                    }
                }
            }
        }

        stage('Docker Build') {
            steps {
                dir('achat-twin9-groupe-5-main/achat-twin9-groupe-5-main/backend') {
                    sh 'docker build -t $DOCKER_IMAGE .'
                }
            }
        }

        stage('Docker Push') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerhub-creds', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh '''
                        echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
                        docker push $DOCKER_IMAGE
                    '''
                }
            }
        }
    }

    post {
        always {
            echo '✅ Pipeline terminée.'
        }
    }
}
